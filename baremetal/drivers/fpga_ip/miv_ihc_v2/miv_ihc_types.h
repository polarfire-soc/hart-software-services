/*******************************************************************************
 * Copyright 2023 Microchip FPGA Embedded Systems Solutions.
 * Script version: develop-1.0.020
 * Register specification version: v0.1
 * Register specification Date: 2023-09-11 00:00:00
 * Note: Autogenerated headers from IP supplied xlsx
 * Author: Embedded Software
 */

#ifndef MIV_IHC_TYPES_H_
#define MIV_IHC_TYPES_H_

#ifdef __cplusplus
extern "C" {
#endif

#ifndef __I
#define __I const volatile
#endif

#ifndef __O
#define __O volatile
#endif

#ifndef __IO
#define __IO volatile
#endif

/* Define the maximum message size in words
 * 4U represents the depth of the message, which is 4 words
 * Each word is 32 bits (4 bytes), total size in bytes is 4 words * 4 bytes per word = 16 bytes*/
#define MAX_MSG_SIZE_IN_BYTES  (16U)
#define MAX_CHANNELS  30U
#define MAX_MODULE    6U
#define CH_PER_MODULE (MAX_MODULE - 1U)

typedef struct IHCC_IP_TypeDef_
{
    __IO uint32_t CTR_REG; /*!< 0x00 control reg   */
    __I uint32_t DEBUG_ID; /*!< 0x04 local_hart_id: my hart id, set at local init   */
    __I uint32_t MESSAGE_SIZE; /*!< 0x08 Size of msg buffer instantiated in fabric      */
    __I uint32_t reserved1[5U]; /*!< 0x0C not used  */
    __I uint32_t MSG_IN[28]; /*!< 0x20  message in           */
    __IO uint32_t MSG_OUT[28]; /*!< 0x90  message out          */
} IHCC_IP_TypeDef;

typedef struct IHCIM_IP_TypeDef_
{
    __IO uint32_t IRQ_MASK; /*  0x00 */
    __I uint32_t reserved2; /*  0x04 */
    __I uint32_t IRQ_STATUS; /*  0x08 */
    __I uint32_t reserved3[61]; /*  0x0C */

} IHCIM_IP_TypeDef;

/*****************************************************************************
 * QUEUE_IHC_INCOMING

 * Type define of upper layer message available handler. The upper layer
 * registers a function of this type when initialing the driver for each channel
 * registered.
 *
 * * @param channel
 *   The channel we want the remote hart ID of.
 *
 * @param message
 *   Pointer to message received
 *
 * @param msg_size
 *   size of msg in words
 *
 */
typedef uint32_t (*QUEUE_IHC_INCOMING)(uint8_t channel,
                                       const uint32_t *message,
                                       uint32_t message_size, uint32_t *ext_msg_ptr);

typedef struct IHC_channel_
{
    __IO IHCC_IP_TypeDef *HART_IHCC;
    QUEUE_IHC_INCOMING mp_callback_handler;
    QUEUE_IHC_INCOMING mc_callback_handler;
    uint32_t *ext_msg_ptr;
    //uint32_t rx_msg[28];
} IHC_channel;

typedef struct IHC_TypeDef_
{
    __IO  IHC_channel IHC_Channels[MAX_CHANNELS];  // Max channel
    __IO  IHCIM_IP_TypeDef *HART_IHCIM[MAX_MODULE]; // max channel interrupt Module
    __IO  uint32_t IHCIM_CONFIG_STATUS[MAX_MODULE]; // max channel interrupt Module
    __I   uint32_t *ip_version;

} IHC_TypeDef;

#ifdef __cplusplus
}
#endif

#endif /* MIV_IHC_TYPES_H_ */
